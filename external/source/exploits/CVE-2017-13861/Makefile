IOS := -arch arm64 -mios-version-min=11.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.2.sdk
GCC_BIN_IOS=`xcrun --sdk iphoneos -f gcc`
GCC_BASE_IOS=$(GCC_BIN_IOS)
SDK_IOS=`xcrun --sdk iphoneos --show-sdk-path`
GCC_IOS=$(GCC_BASE_IOS) -arch arm64 -isysroot $(SDK_IOS) -fno-stack-protector -fno-exceptions -fpie -fPIC -fPIE -fpic

all: clean exploit.bin

main: main.c
	$(GCC_IOS) -o main main.c

exploit.bin: main payload.dylib
	ruby create_bin.rb main

%.o: %.m common.h
	clang -c ${IOS} $< -o $@ -fno-stack-protector -fobjc-arc -fmodules

payload.dylib: payload.o
	clang $(IOS) $^ -shared -o $@ -bind_at_load \
		-fno-stack-protector -fobjc-arc -fmodules -framework IOKit -lc++
	strip -u -r -s exports.txt payload.dylib

install: exploit.bin
	mkdir -p ../../../../data/exploits/CVE-2017-13861
	cp exploit.bin ../../../../data/exploits/CVE-2017-13861/exploit

clean:
	rm -f *.o main exploit.bin payload.dylib

