
MUSL_DIR=~/dev/git/mettle/build/tools/musl-cross/bin/
#MUSL_PREFIX=$(MUSL_DIR)x86_64-linux-musl-
#MUSL_PREFIX=$(MUSL_DIR)aarch64-linux-musl-
MUSL_PREFIX=$(MUSL_DIR)armv5l-linux-musleabi-
MUSL_CC=$(MUSL_PREFIX)cc
MUSL_AS=$(MUSL_PREFIX)as
MUSL_OBJCOPY=$(MUSL_PREFIX)objcopy

all: shellcode

exploit: exploit.c
	$(MUSL_CC) -static -O0 -o $@ $^
	cp exploit ../../../../data/exploits/CVE-2019-2215/exploit

elf2shellcode:
	gcc elf2shellcode.c -o elf2shellcode

loaderarm:
	$(MUSL_AS) loaderarm.s -o loaderarm.o
	$(MUSL_OBJCOPY) -O binary loaderarm.o loaderarm.bin
	cp loaderarm.bin ../../../../data/exploits/CVE-2019-2215/loader.armle

shellcode: exploit loaderarm elf2shellcode
	./elf2shellcode exploit exploit.bin
	cp exploit.bin ../../../../data/exploits/CVE-2019-2215/exploit.armle

push: exploit
	adb push exploit /data/local/tmp/exploit

test: clean push
	adb shell /data/local/tmp/exploit

install: exploit

clean:
	rm -rf libs
	rm -rf obj
	rm -f exploit elf2shellcode

