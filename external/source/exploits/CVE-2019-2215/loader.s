
start:
    adr    x0, address
    ldr    x0, [x0]
    mov    x14, x0

    adr    x2, size
    ldr    x2, [x2]
    mov    x10, x2

    /* Page-align, assume <4GB */
    lsr    x2, x2, #12
    add    x2, x2, #1
    lsl    x2, x2, #12

    /* mmap(addr=0, length='x2', prot=7, flags=34, fd=-1, offset=0) */
    mov    x0, xzr
    mov    x1, x2
    mov    x2, #7
    mov    x3, #34
    mvn    x4, xzr
    mov    x5, xzr
    mov    x8, #0xde
    svc    #0

    /* Save the memory address */
    mov    x11, x0               // x0 and x11 = the mmap rwx region
    mov    x1, x14               // x1 = source address

    /* Grab the saved size, save the address */
    //add    x2, x14, #32
    add    x2, x14, x10          // x2 = source + size = end
    sub    x2, x2,  #16

copyloop:

    ldr    x3, [x1, #8]          // x3 = memory[x1+8]
    ldr    x4, [x1], #16         // x4 = memory[x1], x1+=16 (post-increment)
    stp    x4, x3, [x0]          // store pair, memory[x0] = x3, x4
    add    x0, x0, #16           // x0+=16

    cmp    x1, x2
    blt    copyloop

    mov    x29, #0
    mov    x30, #0
    br     x11

.balign 16
address:
        .word 0xdeadc0de
        .word 0x0
size:
        .word 0xdead515e
        .word 0x0

